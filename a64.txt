#
# This file is part of PIE, an instruction encoder / decoder generator:
#    https://github.com/beehive-lab/pie
#
# Copyright 2014-2016 Amanieu d'Antras <amanieu at gmail dot com>
# Copyright 2015-2016 Guillermo Callaghan <guillermocallaghan at hotmail dot com>
# Copyright 2011-2016 Cosmin Gorgovan <cosmin at linux-geek dot org>
# Copyright 2017-2021 The University of Manchester
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
CBZ_CBNZ                a011010b cccccccc cccccccc cccddddd, a:sf, b:op, c:imm19, d:rt
B_cond                  01010100 aaaaaaaa aaaaaaaa aaa0bbbb, a:imm19, b:cond
SVC                     11010100 000aaaaa aaaaaaaa aaa00001, a:imm16
HVC                     11010100 000aaaaa aaaaaaaa aaa00010, a:imm16
SMC                     11010100 000aaaaa aaaaaaaa aaa00011, a:imm16
BRK                     11010100 001aaaaa aaaaaaaa aaa00000, a:imm16
HLT                     11010100 010aaaaa aaaaaaaa aaa00000, a:imm16
DCPS1                   11010100 101aaaaa aaaaaaaa aaa00001, a:imm16
DCPS2                   11010100 101aaaaa aaaaaaaa aaa00010, a:imm16
DCPS3                   11010100 101aaaaa aaaaaaaa aaa00011, a:imm16
MSR_immed               11010101 00000aaa 0100bbbb ccc11111, a:op1, b:crm, c:op2
HINT                    11010101 00000011 0010aaaa bbb11111, a:crm, b:op2
CLREX                   11010101 00000011 0011aaaa 01011111, a:crm
DSB                     11010101 00000011 0011aaaa 10011111, a:crm
DMB                     11010101 00000011 0011aaaa 10111111, a:crm
ISB                     11010101 00000011 0011aaaa 11011111, a:crm
SYS                     11010101 00001aaa bbbbcccc dddeeeee, a:op1, b:crn, c:crm, d:op2, e:rt
MRS_MSR_reg             11010101 00a1bccc ddddeeee fffggggg, a:r, b:o0, c:op1, d:crn, e:crm, f:op2, g:rt
MRRS_MSRR               11010101 01abbccc ddddeeee fffggggg, a:L, b:op0, c:op1, d:CRn, e:CRm, f:op2, g:Rt
SYSL                    11010101 00101aaa bbbbcccc dddeeeee, a:op1, b:crn, c:crm, d:op2, e:rt
SB                      11010101 00000011 0011aaaa 11111111, a:crm
TBZ_TBNZ                a011011b cccccddd dddddddd dddeeeee, a:b5, b:op, c:b40, d:imm14, e:rt
B_BL                    a00101bb bbbbbbbb bbbbbbbb bbbbbbbb, a:op, b:imm26
BR                      11010110 00011111 000000aa aaa00000, a:rn
BLR                     11010110 00111111 000000aa aaa00000, a:rn
RET                     11010110 01011111 000000aa aaa00000, a:rn
ERET                    11010110 10011111 00000011 11100000
DRPS                    11010110 10111111 00000011 11100000
LDX_STX                 aa001000 bcdeeeee fggggghh hhhiiiii, a:size, b:o2, c:l, d:o1, e:rs, f:o0, g:rt2, h:rn, i:rt
LDR_lit                 aa011b00 cccccccc cccccccc cccddddd, a:opc, b:v, c:imm19, d:rt
LDP_STP                 aa101b0c cdeeeeee efffffgg ggghhhhh, a:opc, b:v, c:type, d:l, e:imm7, f:rt2, g:rn, h:rt
LDR_STR_immed           aa111b00 cc0ddddd ddddeeff fffggggg, a:size, b:v, c:opc, d:imm9, e:type, f:rn, g:rt
LDR_STR_reg             aa111b00 cc1ddddd eeef10gg ggghhhhh, a:size, b:v, c:opc, d:rm, e:option, f:s, g:rn, h:rt
LDR_STR_unsigned_immed  aa111b01 ccdddddd ddddddee eeefffff, a:size, b:v, c:opc, d:imm12, e:rn, f:rt
LDx_STx_multiple        0a001100 0b000000 ccccddee eeefffff, a:q, b:l, c:opcode, d:size, e:rn, f:rt
LDx_STx_multiple_post   0a001100 1b0ccccc ddddeeff fffggggg, a:q, b:l, c:rm, d:opcode, e:size, f:rn, g:rt
LDx_STx_single          0a001101 0bc00000 dddeffgg ggghhhhh, a:q, b:l, c:r, d:opcode, e:s, f:size, g:rn, h:rt
LDx_STx_single_post     0a001101 1bcddddd eeefgghh hhhiiiii, a:q, b:l, c:r, d:rm, e:opcode, f:s, g:size, h:rn, i:rt
LDADD                   aa111000 bc1ddddd 000000ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDCLR                   aa111000 bc1ddddd 000100ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDEOR                   aa111000 bc1ddddd 001000ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDSMAX                  aa111000 bc1ddddd 010000ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDSMIN                  aa111000 bc1ddddd 010100ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDUMAX                  aa111000 bc1ddddd 011000ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDUMIN                  aa111000 bc1ddddd 011100ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
LDSET                   aa111000 bc1ddddd 001100ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
SWP                     aa111000 bc1ddddd 100000ee eeefffff, a:size, b:a, c:r, d:rs, e:rn, f:rt
ADD_SUB_immed           abc10001 ddeeeeee eeeeeeff fffggggg, a:sf, b:op, c:s, d:shift, e:imm12, f:rn, g:rd
BFM                     abb10011 0cdddddd eeeeeeff fffggggg, a:sf, b:opc, c:n, d:immr, e:imms, f:rn, g:rd
EXTR                    a0010011 1b0ccccc ddddddee eeefffff, a:sf, b:n, c:rm, d:imms, e:rn, f:rd
logical_immed           abb10010 0cdddddd eeeeeeff fffggggg, a:sf, b:opc, c:n, d:immr, e:imms, f:rn, g:rd
MOV_wide                abb10010 1ccddddd dddddddd dddeeeee, a:sf, b:opc, c:hw, d:imm16, e:rd
ADR                     abb10000 cccccccc cccccccc cccddddd, a:op, b:immlo, c:immhi, d:rd
ADD_SUB_ext_reg         abc01011 001ddddd eeefffgg ggghhhhh, a:sf, b:op, c:s, d:rm, e:option, f:imm3, g:rn, h:rd
ADD_SUB_shift_reg       abc01011 dd0eeeee ffffffgg ggghhhhh, a:sf, b:op, c:s, d:shift, e:rm, f:imm6, g:rn, h:rd
ADC_SBC                 abc11010 000ddddd 000000ee eeefffff, a:sf, b:op, c:s, d:rm, e:rn, f:rd
CCMP_CCMN_immed         ab111010 010ccccc dddd10ee eee0ffff, a:sf, b:op,  c:imm5, d:cond,  e:rn, f:nzcv
CCMP_CCMN_reg           ab111010 010ccccc dddd00ee eee0ffff, a:sf, b:op, c:rm, d:cond, e:rn, f:nzcv
cond_select             ab011010 100ccccc ddddeeff fffggggg, a:sf, b:op, c:rm, d:cond, e:op2, f:rn, g:rd
data_proc_reg1          a1011010 11000000 bbbbbbcc cccddddd, a:sf, b:opcode, c:rn, d:rd
data_proc_reg2          a0011010 110bbbbb ccccccdd dddeeeee, a:sf, b:rm, c:opcode, d:rn, e:rd
data_proc_reg3          a0011011 bbbccccc deeeeeff fffggggg, a:sf, b:op31, c:rm, d:o0, e:Ra, f:rn, g:rd
logical_reg             abb01010 ccdeeeee ffffffgg ggghhhhh, a:sf, b:opc, c:shift, d:n, e:rm, f:imm6, g:rn, h:rd
simd_across_lane        0ab01110 cc11000d dddd10ee eeefffff, a:q, b:u, c:size, d:opcode, e:rn, f:rd
simd_copy               0ab01110 000ccccc 0dddd1ee eeefffff, a:q, b:op, c:imm5, d:imm4, e:rn, f:rd
simd_extract            0a101110 000bbbbb 0cccc0dd dddeeeee, a:q, b:rm, c:imm4, d:rn, e:rd
simd_modified_immed     0ab01111 00000ccc dddd01ee eeefffff, a:q, b:op, c:abc, d:cmode, e:defgh, f:rd
simd_permute            0a001110 bb0ccccc 0ddd10ee eeefffff, a:q, b:size, c:rm, d:opcode, e:rn, f:rd
simd_scalar_copy        01011110 000aaaaa 000001bb bbbccccc, a:imm5, b:rn, c:rd
simd_scalar_pairwise    01a11110 bb11000c cccc10dd dddeeeee, a:u, b:size, c:opcode, d:rn, e:rd
simd_scalar_shift_immed 01a11111 0bbbbccc ddddd1ee eeefffff, a:u, b:immh, c:immb, d:opcode, e:rn, f:rd
simd_scalar_three_diff  01a11110 bb1ccccc dddd00ee eeefffff, a:u, b:size, c:rm, d:opcode, e:rn, f:rd
simd_scalar_three_same  01a11110 bb1ccccc ddddd1ee eeefffff, a:u, b:size, c:rm, d:opcode, e:rn, f:rd
simd_scalar_two_reg     01a11110 bb10000c cccc10dd dddeeeee, a:u, b:size, c:opcode, d:rn, e:rd
simd_scalar_x_indexed   01a11111 bbcdeeee ffffg0hh hhhiiiii, a:u, b:size, c:l, d:m, e:rm, f:opcode, g:H, h:rn, i:rd
simd_shift_immed        0ab01111 0ccccddd eeeee1ff fffggggg, a:q, b:u, c:immh:!:0000, d:immb, e:opcode, f:rn, g:rd
simd_table_lookup       0a001110 000bbbbb 0ccd00ee eeefffff, a:q, b:rm, c:len, d:op, e:rn, f:rd
simd_three_diff         0ab01110 cc1ddddd eeee00ff fffggggg, a:q, b:u, c:size, d:rm, e:opcode, f:rn, g:rd
simd_three_same         0ab01110 cc1ddddd ccccc1dd dddeeeee, a:q, b:u, c:size, d:rm, c:opcode, d:rn, e:rd
simd_two_reg            0ab01110 cc10000d dddd10ee eeefffff, a:q, b:u, c:size, d:opcode, e:rn, f:rd
simd_x_indexed          0ab01111 ccdeffff ggggh0ii iiijjjjj, a:q, b:u, c:size, d:l, e:m, f:rm, g:opcode, h:H, i:rn, j:rd
crypto_aes              01001110 0010100a aaaa10bb bbbccccc, a:opcode, b:rn, c:rd
crypto_sha_reg3         01011110 000aaaaa 0ccc00dd dddeeeee, a:rm, c:opcode, d:rn, e:rd
crypto_sha_reg2         01011110 0010100a aaaa10bb bbbccccc, a:opcode, b:rn, c:rd
FCMP                    00011110 aa1bbbbb 001000cc cccddddd, a:type, b:rm, c:rn, d:opcode2
FCCMP                   00011110 aa1bbbbb cccc01dd dddeffff, a:type, b:rm, c:cond, d:rn, e:op, f:nzcv
FCSEL                   00011110 aa1bbbbb cccc11dd dddeeeee, a:type, b:rm, c:cond, d:rn, e:rd
float_reg1              00011110 aa1bbbbb b10000cc cccddddd, a:type, b:opcode, c:rn, d:rd
float_reg2              00011110 aa1bbbbb cccc10dd dddeeeee, a:type, b:rm, c:opcode, d:rn, e:rd
float_reg3              00011111 aabccccc deeeeeff fffggggg, a:type, b:o1, c:rm, d:o0, e:Ra, f:rn, g:rd
FMOV_immed              00011110 aa1bbbbb bbb10000 000ccccc, a:type, b:imm8, c:rd
float_cvt_fixed         a0011110 bb0ccddd eeeeeeff fffggggg, a:sf, b:type, c:rmode, d:opcode, e:scale, f:rn, g:rd
float_cvt_int           a0011110 bb1ccddd 000000ee eeefffff, a:sf, b:type, c:rmode, d:opcode, e:rn, f:rd
lrcpc_1                 aa111000 10111111 110000bb bbbccccc, a:size, b:Rn, c:Rt
lrcpc_2                 aa011001 bb0ccccc cccc00dd dddeeeee, a:size, b:opc, c:imm9, d:Rn, e:Rt
sve_mult_add_pred       00000100 aa0bbbbb cccdddee eeefffff, a:size, b:Zm, c:opc, d:pg, e:Zn, f:Zda
sve_arith_pred          00000100 aa0bbbbb 000cccdd dddeeeee, a:size, b:opc, c:pg, d:Zm, e:Zdn
sve_int_reduct          00000100 aa0bbbbb 001cccdd dddeeeee, a:size, b:opc, c:pg, d:Zm, e:Zdn
sve_shift               00000100 aa0bbbbb 100cccdd dddeeeee, a:size, b:opc, c:pg, d:Zm, e:Zdn
sve_unary_arith         00000100 aa0bbbbb 101cccdd dddeeeee, a:size, b:opc, c:pg, d:Zm, e:Zdn
sve_add_sub_unpred      00000100 aa1bbbbb 000cccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve_log_unpred          00000100 aa1bbbbb 001cccdd dddeeeee, a:opc, b:Zm, c:opc2, d:Zn, e:Zd
sve_index_gen           00000100 aa1bbbbb 0100ccdd dddeeeee, a:opc, b:imm5, c:opc2, d:Rn, e:Zd
sve_stack_alloc         00000100 aa1bbbbb 0101cddd dddeeeee, a:opc, b:Rn, c:opc2, d:imm6, e:Rd
sve2_int_mult_unpred    00000100 aa1bbbbb 011cccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve_bit_shift_unpred    00000100 aa1bbbbb 100cccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve_adr                 00000100 aa1bbbbb 1010ccdd dddeeeee, a:opc, b:Zm, c:msz, d:Zn, e:Zd
sve_int_misc            00000100 aa1bbbbb 1011ccdd dddeeeee, a:opc, b:Zm, c:opc2, d:Zn, e:Zd
sve_elem_cnt            00000100 aaaabbbb 11ccccdd dddeeeee, a:opc, b:imm4, c:opc2, d:patteRn, e:Zdn
sve_bitwise_imm         00000101 aa0000bb bbbbbbbb bbbccccc, a:opc, b:imm13, c:Zdn
sve_int_wide_imm_pred   00000101 aa01bbbb cccddddd dddeeeee, a:size, b:pg, c:opc, d:imm8, e:Zd
sve_dup_indexed         00000101 aa1bbbbb 001000cc cccddddd, a:imm2, b:tsz, c:Zn, d:Zd
sve2_dupq               00000101 001abbbb 001001cc cccddddd, a:i1, b:tsz, c:Zn, d:Zd
sve2_extq               00000101 0110aaaa 001001bb bbbccccc, a:imm4, b:Zm, c:Zdn
sve2_tbl                00000101 aa1bbbbb 001010cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve2_tbx                00000101 aa1bbbbb 001011cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve_tbl                 00000101 aa1bbbbb 001100cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve2_tbqx               00000101 aa1bbbbb 001101cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve_dup_scalar          00000101 aa100000 001110bb bbbccccc, a:size, b:Rn, c:Zd
sve_insr_scalar         00000101 aa100100 001110bb bbbccccc, a:size, b:Rm, c:Zdn
sve2_pmov_to_pred       00000101 aa101bb0 001110cc ccc0dddd, a:opc, b:opc2, c:Zn, d:Pd
sve2_pmov_to_vec        00000101 aa101bb1 0011100c cccddddd, a:opc, b:opc2, c:Pn, d:Zd
sve_unpk_unpred         00000101 aa1100bc 001110dd dddeeeee, a:size, b:U, c:H, d:Zn, e:Zd
sve_insr_simd           00000101 aa110100 001110bb bbbccccc, a:size, b:Vm, c:Zdn
sve_rev_unpred          00000101 aa111000 001110bb bbbccccc, a:size, b:Zn, c:Zd
sve_unpk_pred           00000101 0011000a 0100000b bbb0cccc, a:H, b:Pn, c:Pd
sve_permute_pred        00000101 aa10bbbb 010ccd0e eee0ffff, a:size, b:Pm, c:opc, d:H, e:Pn, f:Pd
sve_rev_pred            00000101 aa110100 0100000b bbb0cccc, a:size, b:Pn, c:Pd
sve_permute_vec         00000101 aa1bbbbb 011cccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve_cpy_simd            00000101 aa100000 100bbbcc cccddddd, a:size, b:Pg, c:Vn, d:Zd
sve_compact             00000101 aa100001 100bbbcc cccddddd, a:size, b:pg, c:Zn, d:zd
sve_last_scalar         00000101 aa10000b 101cccdd dddeeeee, a:size, b:B, c:pg, d:zn, e:rd
sve_last_simd           00000101 aa10001b 100cccdd dddeeeee, a:size, b:B, c:pg, d:zn, e:vd
sve_rev_elem            00000101 aa1001bb 100cccdd dddeeeee, a:size, b:opc, c:pg, d:zn, e:zd
sve_cpy_scalar          00000101 aa101000 101bbbcc cccddddd, a:size, b:pg, c:rn, d:zd
sve_clast_pred          00000101 aa10100b 100cccdd dddeeeee, a:size, b:B, c:pg, d:zm, e:zdn
sve_clast_simd_pred     00000101 aa10101b 100cccdd dddeeeee, a:size, b:B, c:pg, d:zm, e:vdn
sve_splice_con          00000101 aa101101 100bbbcc cccddddd, a:size, b:pv, c:zn, d:zd
sve_splice_des          00000101 aa101100 100bbbcc cccddddd, a:size, b:pv, c:zm, d:zdn
sve2_revd               00000101 aa101110 100bbbcc cccddddd, a:size, b:pg, c:zn, d:zd
sve_clast_gen_reg       00000101 aa11000b 101cccdd dddeeeee, a:size, b:B, c:pg, d:zm, e:rdn
sve_sel                 00000101 aa1bbbbb 11ccccdd dddeeeee, a:size, b:Zm, c:pv, d:Zn, e:Zd
sve_ext_con             00000101 011aaaaa 000bbbcc cccddddd, a:imm8h, b:imm8l, c:zn, d:zd
sve_ext_des             00000101 001aaaaa 000bbbcc cccddddd, a:imm8h, b:imm8l, c:zm, d:zdn
sve_zip                 00000101 101aaaaa 00000bcc cccddddd, a:zm, b:B, c:zn, d:zd
sve_int_cmp             00100100 aa0bbbbb cccdddee eeefgggg, a:size, b:Zm, c:opc, d:pg, e:Zn, f:ne, g:pd
sve_int_cmp_uimm        00100100 aa1bbbbb bbcdddee eeefgggg, a:size, b:imm7, c:lt, d:pg, e:Zn, f:ne, g:pd
sve_int_cmp_simm        00100101 aa0bbbbb cccdddee eeefgggg, a:size, b:imm5, c:opc, d:pg, e:Zn, f:ne, g:pd
sve_pred_log            00100101 aa00bbbb 01ccccde eeefgggg, a:opc, b:pm, c:pg, d:opc2, e:pn, f:opc3, g:pd
sve_prop_break          00100101 aa00bbbb 11cccc0d dddeffff, a:opc, b:pm, c:pg, d:pn, e:B, f:pd
sve_uzp                 00000101 101aaaaa 00001bcc cccddddd, a:zm, b:B, c:zn, d:zd
sve_trn                 00000101 101aaaaa 00011bcc cccddddd, a:zm, b:B, c:zn, d:zd
sve_part_break          00100101 aa01bbbb 01cccc0d dddeffff, a:opc, b:opc2, c:pg, d:pn, e:m, f:pd
sve_ptest               00100101 01010000 11aaaa0b bbb00000, a:Pg, b:Pn
sve_pfirst              00100101 01011000 1100000a aaa0bbbb, a:Pg, b:Pdn
sve_pfalse              00100101 00011000 11100100 0000aaaa, a:Pd
sve_pnext               00100101 aa011001 1100010b bbb0cccc, a:size, b:Pv, c:Pdn
sve_ptrue               00100101 aa01100b 111000cc ccc0dddd, a:size, b:S, c:Ptrn, d:Pd
sve_rdffr               00100101 ab011000 1111000c ccc0dddd, a:op, b:S, c:Pg, d:Pd
sve_rdffr_unpred        00100101 ab011001 11110000 0000cccc, a:op, b:S, c:Pd
sve_int_cmp_scalar      00100101 aa1bbbbb 00ccccdd dddeffff, a:size, b:Rm, c:opc, d:Rn, e:eq, f:Pd
sve2_broadcast_pred     00100101 aa1bbbcc 01ddddef fff0gggg, a:opc, b:tszl, c:rv, d:Pn, e:s, f:Pm, g:Pd
sve2_pext               00100101 aa100000 01110bbb ccc1dddd, a:size, b:opc, c:PNn, d:pd
sve2_ptrue              00100101 aa100000 01111000 00010bbb, a:size, b:PNd
sve2_while_pair         00100101 aa1bbbbb 0101cdee eee1fffg, a:size, b:Rm, c:U, d:lt, e:Rn, f:Pd, g:eq
sve2_while_cntr         00100101 aa1bbbbb 01c0deff fff1ghhh, a:size, b:Rm, c:vl, d:U, e:lt, f:Rn, g:eq, h:PNd
sve_int_wide_imm        00100101 aa1bbbbb 11cddddd dddeeeee, a:size, b:opc, c:opc2, d:imm8, e:Zdn
sve2_pred_cnt           00100101 aa100bbb 10cccccd dddeeeee, a:size, b:opc, c:opc2, d:PNn, e:Rd
sve_inc_dec_pred_cnt    00100101 aa101bbb 1000cccd dddeeeee, a:size, b:opc, c:opc2, d:Pm, e:Zdn
sve_wrffr               00100101 00101000 1001000a aaa00000, a:Pn
sve_setffr              00100101 00101100 10010000 00000000
sve_int_mult_add_unpred 01000100 aa0bbbbb 0cccccdd dddeeeee, a:sie, b:Zm, c:opc, d:Zn, e:Zda
sve2_int_pred           01000100 aa0bbbbb 10cdddee eeefffff, a:size, b:opc, c:opc2, d:pg, e:Zn, f:Zda
sve2_int_clamp          01000100 aa0bbbbb 11000cdd dddeeeee, a:size, b:Zm, c:u, d:Zn, e:Zd
sve2_mla_cpa            01000100 aa0bbbbb 1101ccdd dddeeeee, a:opc, b:Zm, c:opc2, d:Zn, e:Zda
sve2_permute_elem_quad  01000100 aa0bbbbb 111cccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve_mult_indexed        01000100 aa1bbbbb bbbbbbcc cccddddd, a:size, b:opc, c:Zn, d:Zda
sve2_two_dot_vec        01000100 000aaaaa 11001bcc cccddddd, a:Zm, b:u, c:Zn, d:Zda
sve2_two_dot_index      01000100 100aaaaa 11001bcc cccddddd, a:opc, b:u, c:Zn, d:Zda
sve2_int_arith          01000101 aa0bbbbb 0cccccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve2_shll               01000101 0a0bbccc 1010deff fffggggg, a:tszh, b:tszl, c:imm3, d:U, e:T, f:Zn, g:Zd
sve2_add_sub_l          01000101 aa0bbbbb 1000cdee eeefffff, a:size, b:Zm, c:S, d:tb, e:Zn, f:Zd
sve2_eortb              01000101 aa0bbbbb 10010cdd dddeeeee, a:size, b:Zm, c:tb, d:Zn, e:Zd
sve_mmla                01000101 aa0bbbbb 100110cc cccddddd, a:uns, b:Zm, c:Zn, d:Zd
sve2_bitperm            01000101 aa0bbbbb 1011ccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve2_accum              01000101 aa0bbbbb b11cccdd dddeeeee, a:size, b:opc, c:opc2, d:Zm, e:Zdn
sve2_narrow             01000101 aa1bbbbb 0cccccdd dddeeeee, a:opc, b:opc2, c:opc3, d:Zn, e:Zd
sve2_match              01000101 aa1bbbbb 100cccdd dddeffff, a:size, b:Zm, c:pg, d:Zn, e:op, f:pd
sve2_histseg            01000101 aa1bbbbb 101000cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve2_histcnt            01000101 aa1bbbbb 110cccdd dddeeeee, a:size, b:Zm, c:pg, d:Zn, e:Zd
sve2_crypto             01000101 aa1bbbbb 111cccdd dddeeeee, a:size, b:opc, c:opc2, d:Zm, e:Zdn
sve_fcmla_vec           01100100 aa0bbbbb 0ccdddee eeefffff, a:size, b:Zm, c:rot, d:pg, e:Zn, f:Zda
sve_fcadd               01100100 aa00000b 100cccdd dddeeeee, a:size, b:rot, c:pg, d:Zm, e:Zdn
sve_fcvt_odd            01100100 aa0010bb 101cccdd dddeeeee, a:opc, b:opc2, c:pg, d:Zn, e:Zd
sve2_fpairwise          01100100 aa010bbb 100cccdd dddeeeee, a:size, b:opc, c:pg, d:Zm, e:Zd
sve2_frec_quad          01100100 aa010bbb 101cccdd dddeeeee, a:size, b:opc, c:pg, d:Zn, e:vd
sve_fmla                01100100 aa1bbbbb 0000ccdd dddeeeee, a:size, b:opc, c:opc2, d:Zn, e:Zda
sve_fcmla               01100100 aa1bbbbb 0001ccdd dddeeeee, a:size, b:opc, c:rot, d:Zn, e:Zda
sve_fmul                01100100 aa1bbbbb 0010ccdd dddeeeee, a:size, b:opc, c:opc2, d:Zn, e:Zd
sve2_fclamp             01100100 aa1bbbbb 001001cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve_wide_fmla_index     01100100 aa1bbccc 01d0eeff fffggggg, a:opc, b:imm, c:Zm, d:opc2, e:opc3, f:Zn, g:Zda
sve_wide_fmla           01100100 aa1bbbbb 10c00dee eeefffff, a:opc, b:Zm, c:opc2, d:opc3, e:Zn, f:Zda
sve2_fp8_mla_index      01100100 aa1bbccc 1100ddee eeefffff, a:TT, b:i4h, c:Zm, d:i4l, e:Zn, f:Zda
sve_fmmla               01100100 aa1bbbbb 111001cc cccddddd, a:opc, b:Zm, c:Zn, d:Zda
sve2_fp8_wide_mla       01100100 a01bbbbb 10cc10dd dddeeeee, a:opc, b:Zm, c:TT, d:Zn, e:Zda
sve_fcm                 01100101 aa0bbbbb c1deeeff fffghhhh, a:size, b:Zm, c:opc, d:opc2, e:pg, f:Zn, g:opc3, h:pd
sve_ftsmul              01100101 aa0bbbbb 000011cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve_frecps              01100101 aa0bbbbb 000110cc cccddddd, a:size, b:Zm, c:Zn, d:Zd
sve_farith_unpred       01100101 aa0bbbbb 000cccdd dddeeeee, a:size, b:Zm, c:opc, d:Zn, e:Zd
sve_frsqrts             01100101 aa0bbbbb 000111cc cccddddd, a:size, b:ZM, c:Zn, d:Zd
sve_farith_pred         01100101 aa00bbbb 100cccdd dddeeeee, a:size, b:opc, c:Pg, d:Zm, e:Zdn
sve_ftmad               01100101 aa010bbb 100000cc cccddddd, a:size, b:imm3, c:Zm, d:Zdn
sve_farith_imm          01100101 aa011bbb 100ccc00 00deeeee, a:size, b:opc, c:Pg, d:i1, e:Zdn
sve_frint               01100101 aa000bbb 101cccdd dddeeeee, a:size, b:opc, c:Pg, d:Zn, e:Zd
sve_fcvt                01100101 aa0010bb 101cccdd dddeeeee, a:opc, b:opc2, c:Pg, d:Zn, e:Zd
sve_frecpx_fsqrt        01100101 aa0011bb 101cccdd dddeeeee, a:size, b:opc, c:Pg, d:Zn, e:Zd
sve_int_fcvt            01100101 aa010bbb 101cccdd dddeeeee, a:opc, b:opc2, c:Pg, d:Zn, e:Zd
sve_fcvt_int            01100101 aa011bbb 101cccdd dddeeeee, a:opc, b:opc2, c:Pg, d:Zn, e:Zd
sve_reduc               01100101 aa000bbb 001cccdd dddeeeee, a:size, b:opc, c:pg, d:Zn, e:vd
sve_unary_unpred        01100101 aa001bbb 0011ccdd dddeeeee, a:size, b:opc, c:opc2, d:Zn, e:Zd
sve_fcmp_zero           01100101 aa010bbb 001cccdd dddeffff, a:size, b:opc, c:pg, d:Zn, e:ne, f:pd
sve_fadda               01100101 aa011000 001bbbcc cccddddd, a:size, b:Pg, c:Zm, d:Vdn
sve_fnmla_d             01100101 aa1bbbbb cccdddee eeefffff, a:size, b:Zm, c:opc, d:pg, e:Zn, f:Zda
sve_32_gather           1000010a aaabbbbb cccdddee eeefgggg, a:opc, b:Zm, c:msz, d:pg, e:Rn, f:opc2, g:prfop
sve_cont_load           1010010a aaaabbbb cccdddee eeefffff, a:opc, b:imm4, c:opc2, d:pg, e:Rn, f:Zt
sve_64_gather           1100010a aaabbbbb cccdddee eeefgggg, a:opc, b:Zm, c:opc2, d:pg, e:Rn, f:opc3, g:prfop
sve_cont_store          1110010a aaaabbbb 0c0dddee eeefffff, a:opc, b:imm4, c:opc2, d:pg, e:Rn, f:Zt
